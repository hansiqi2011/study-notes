* STL stack 容器对元素采取 {{cloze LIFO（后进先出）}} 的管理策略 #card #[[C++ STL]]
:PROPERTIES:
:card-last-interval: 45.89
:card-repeats: 4
:card-ease-factor: 2.9
:card-next-schedule: 2022-10-29T20:07:27.148Z
:card-last-reviewed: 2022-09-13T23:07:27.148Z
:card-last-score: 5
:END:
* 使用stack应该include哪个头文件？ #card #[[C++ STL]]
:PROPERTIES:
:card-last-interval: 45.89
:card-repeats: 4
:card-ease-factor: 2.9
:card-next-schedule: 2022-10-29T20:07:12.528Z
:card-last-reviewed: 2022-09-13T23:07:12.529Z
:card-last-score: 5
:END:
** #+BEGIN_SRC c++
#include <stack>
#+END_SRC
* 怎样创建一个stack？ #card #[[C++ STL]]
:PROPERTIES:
:card-last-interval: 45.89
:card-repeats: 4
:card-ease-factor: 2.9
:card-next-schedule: 2022-10-30T21:59:50.485Z
:card-last-reviewed: 2022-09-15T00:59:50.486Z
:card-last-score: 5
:END:
** #+BEGIN_SRC c++
stack<int> stk;//定义一个stack，其中元素的类型为int
#+END_SRC
* 常见的stack操作都有哪些？ #card #[[C++ STL]]
:PROPERTIES:
:card-last-interval: 30.47
:card-repeats: 4
:card-ease-factor: 2.76
:card-next-schedule: 2022-09-21T00:57:08.904Z
:card-last-reviewed: 2022-08-21T13:57:08.905Z
:card-last-score: 5
:END:
** #+BEGIN_SRC c++
//stack中的常用内置函数
stack<int> stk;
stk.push(x);//在stack中压入元素x
stk.pop();//弹出stack的栈顶元素
stk.top();//返回stack的栈顶元素
stk.size();//返回stack中元素的个数
stk.empty();//返回stack是否为空，若为空则返回true否则返回false
#+END_SRC