* STL stack 容器对元素采取 {{cloze LIFO（后进先出）}} 的管理策略 #card #[[C++ STL]]
:PROPERTIES:
:card-last-interval: 31.07
:card-repeats: 1
:card-ease-factor: 2.6
:card-next-schedule: 2022-08-26T01:22:53.212Z
:card-last-reviewed: 2022-07-26T00:22:53.213Z
:card-last-score: 5
:END:
* 使用stack应该include哪个头文件？ #card #[[C++ STL]]
:PROPERTIES:
:card-last-interval: 31.07
:card-repeats: 1
:card-ease-factor: 2.6
:card-next-schedule: 2022-08-26T01:21:24.544Z
:card-last-reviewed: 2022-07-26T00:21:24.545Z
:card-last-score: 5
:END:
** #+BEGIN_SRC c++
#include <stack>
#+END_SRC
* 怎样创建一个stack？ #card #[[C++ STL]]
:PROPERTIES:
:card-last-interval: 31.07
:card-repeats: 1
:card-ease-factor: 2.6
:card-next-schedule: 2022-08-26T01:35:01.441Z
:card-last-reviewed: 2022-07-26T00:35:01.441Z
:card-last-score: 5
:END:
** #+BEGIN_SRC c++
stack<int> stk;//定义一个stack，其中元素的类型为int
#+END_SRC
* 常见的stack操作都有哪些？ #card #[[C++ STL]]
:PROPERTIES:
:card-last-interval: 11
:card-repeats: 3
:card-ease-factor: 2.66
:card-next-schedule: 2022-08-20T00:39:59.326Z
:card-last-reviewed: 2022-08-09T00:39:59.326Z
:card-last-score: 5
:END:
** #+BEGIN_SRC c++
//stack中的常用内置函数
stack<int> stk;
stk.push(x);//在stack中压入元素x
stk.pop();//弹出stack的栈顶元素
stk.top();//返回stack的栈顶元素
stk.size();//返回stack中元素的个数
stk.empty();//返回stack是否为空，若为空则返回true否则返回false
#+END_SRC