* STL stack 容器对元素采取 {{cloze LIFO（后进先出）}} 的管理策略 #card #[[C++ STL]]
:PROPERTIES:
:card-last-interval: 194.48
:card-repeats: 5
:card-ease-factor: 3
:card-next-schedule: 2023-05-13T11:14:40.089Z
:card-last-reviewed: 2022-10-31T00:14:40.091Z
:card-last-score: 5
:END:
* 使用stack应该include哪个头文件？ #card #[[C++ STL]]
:PROPERTIES:
:card-last-interval: 194.48
:card-repeats: 5
:card-ease-factor: 3
:card-next-schedule: 2023-05-13T11:14:17.704Z
:card-last-reviewed: 2022-10-31T00:14:17.704Z
:card-last-score: 5
:END:
** #+BEGIN_SRC c++
#include <stack>
#+END_SRC
* 怎样创建一个stack？ #card #[[C++ STL]]
:PROPERTIES:
:card-last-interval: 194.48
:card-repeats: 5
:card-ease-factor: 3
:card-next-schedule: 2023-05-13T11:35:30.307Z
:card-last-reviewed: 2022-10-31T00:35:30.308Z
:card-last-score: 5
:END:
** #+BEGIN_SRC c++
stack<int> stk;//定义一个stack，其中元素的类型为int
#+END_SRC
* 常见的stack操作都有哪些？ #card #[[C++ STL]]
:PROPERTIES:
:card-last-interval: 96.85
:card-repeats: 5
:card-ease-factor: 2.86
:card-next-schedule: 2022-12-27T19:04:35.834Z
:card-last-reviewed: 2022-09-21T23:04:35.835Z
:card-last-score: 5
:END:
** #+BEGIN_SRC c++
//stack中的常用内置函数
stack<int> stk;
stk.push(x);//在stack中压入元素x
stk.pop();//弹出stack的栈顶元素
stk.top();//返回stack的栈顶元素
stk.size();//返回stack中元素的个数
stk.empty();//返回stack是否为空，若为空则返回true否则返回false
#+END_SRC